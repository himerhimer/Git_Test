<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\DSY.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\DSY.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5040049: Last Updated: Wed Dec 15 14:06:13 2021
<BR><P>
<H3>Maximum Stack Usage =        248 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; UIDisplay &rArr; Page4 &rArr; ErrorListShow &rArr; DisplayString &rArr; display_graphic_12x12 &rArr; wrdataR &rArr; Busy &rArr; GPIO_Configuration_in &rArr; GPIO_Init
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[1c]">ADC1_2_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1c]">ADC1_2_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[1c]">ADC1_2_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[39]">ADC3_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[4]">BusFault_Handler</a> from stm32f10x_it.o(i.BusFault_Handler) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[1f]">CAN1_RX1_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[20]">CAN1_SCE_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[15]">DMA1_Channel1_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[16]">DMA1_Channel2_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[17]">DMA1_Channel3_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[18]">DMA1_Channel4_IRQHandler</a> from bsp_usart_dma.o(i.DMA1_Channel4_IRQHandler) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[19]">DMA1_Channel5_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[1a]">DMA1_Channel6_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[1b]">DMA1_Channel7_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[42]">DMA2_Channel1_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[43]">DMA2_Channel2_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[44]">DMA2_Channel3_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[45]">DMA2_Channel4_5_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[7]">DebugMon_Handler</a> from stm32f10x_it.o(i.DebugMon_Handler) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[10]">EXTI0_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[32]">EXTI15_10_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[11]">EXTI1_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[12]">EXTI2_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[13]">EXTI3_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[14]">EXTI4_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[21]">EXTI9_5_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[e]">FLASH_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[3a]">FSMC_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from stm32f10x_it.o(i.HardFault_Handler) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[2a]">I2C1_ER_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[29]">I2C1_EV_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[2c]">I2C2_ER_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[2b]">I2C2_EV_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[3]">MemManage_Handler</a> from stm32f10x_it.o(i.MemManage_Handler) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from stm32f10x_it.o(i.NMI_Handler) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[b]">PVD_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[8]">PendSV_Handler</a> from stm32f10x_it.o(i.PendSV_Handler) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[f]">RCC_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[33]">RTCAlarm_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[d]">RTC_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[3b]">SDIO_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[2d]">SPI1_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[2e]">SPI2_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[3d]">SPI3_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[6]">SVC_Handler</a> from stm32f10x_it.o(i.SVC_Handler) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[9]">SysTick_Handler</a> from stm32f10x_it.o(i.SysTick_Handler) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[47]">SystemInit</a> from system_stm32f10x.o(i.SystemInit) referenced from startup_stm32f10x_hd.o(.text)
 <LI><a href="#[c]">TAMPER_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[22]">TIM1_BRK_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[25]">TIM1_CC_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[24]">TIM1_TRG_COM_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[23]">TIM1_UP_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[26]">TIM2_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[27]">TIM3_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[28]">TIM4_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[3c]">TIM5_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[40]">TIM6_IRQHandler</a> from bsp_timbase.o(i.TIM6_IRQHandler) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[41]">TIM7_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[35]">TIM8_BRK_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[38]">TIM8_CC_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[37]">TIM8_TRG_COM_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[36]">TIM8_UP_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[3e]">UART4_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[3f]">UART5_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[2f]">USART1_IRQHandler</a> from bsp_usart_dma.o(i.USART1_IRQHandler) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[30]">USART2_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[31]">USART3_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[34]">USBWakeUp_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[1d]">USB_HP_CAN1_TX_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[1e]">USB_LP_CAN1_RX0_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[5]">UsageFault_Handler</a> from stm32f10x_it.o(i.UsageFault_Handler) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[a]">WWDG_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[48]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_stm32f10x_hd.o(.text)
 <LI><a href="#[49]">fputc</a> from bsp_usart_dma.o(i.fputc) referenced from printf1.o(i.__0printf$1)
 <LI><a href="#[46]">main</a> from main.o(i.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[48]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(.text)
</UL>
<P><STRONG><a name="[113]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[4a]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[4c]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[114]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[115]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[116]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[117]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[118]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>ADC1_2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_2_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_2_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[39]"></a>ADC3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>CAN1_RX1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>CAN1_SCE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>DMA1_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>DMA1_Channel2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>DMA1_Channel3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>DMA1_Channel5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>DMA1_Channel6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>DMA1_Channel7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[42]"></a>DMA2_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[43]"></a>DMA2_Channel2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[44]"></a>DMA2_Channel3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[45]"></a>DMA2_Channel4_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>EXTI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[32]"></a>EXTI15_10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>EXTI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>EXTI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>EXTI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>EXTI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>EXTI9_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[3a]"></a>FSMC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>I2C1_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>I2C1_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>I2C2_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>I2C2_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>PVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>RCC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[33]"></a>RTCAlarm_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>RTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[3b]"></a>SDIO_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[3d]"></a>SPI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>TAMPER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>TIM1_BRK_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>TIM1_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>TIM1_TRG_COM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>TIM1_UP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>TIM2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>TIM3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>TIM4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[3c]"></a>TIM5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[41]"></a>TIM7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[35]"></a>TIM8_BRK_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[38]"></a>TIM8_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[37]"></a>TIM8_TRG_COM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[36]"></a>TIM8_UP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[3e]"></a>UART4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[3f]"></a>UART5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>USART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>USART3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[34]"></a>USBWakeUp_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>USB_HP_CAN1_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>USB_LP_CAN1_RX0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[a4]"></a>__aeabi_memcpy</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyCtrl
</UL>

<P><STRONG><a name="[119]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[11a]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[11b]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)

<P><STRONG><a name="[104]"></a>__aeabi_uidivmod</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[4b]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[11c]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[11d]"></a>__decompress</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[11e]"></a>__decompress1</STRONG> (Thumb, 86 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[4d]"></a>BASIC_TIM_Init</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, bsp_timbase.o(i.BASIC_TIM_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = BASIC_TIM_Init &rArr; BASIC_TIM_NVIC_Config &rArr; NVIC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BASIC_TIM_NVIC_Config
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BASIC_TIM_Mode_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[a7]"></a>BL_CTRL</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, bsp_generaltim_pwm.o(i.BL_CTRL))
<BR><BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyCtrl
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[57]"></a>BL_PWM_Init</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, bsp_generaltim_pwm.o(i.BL_PWM_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = BL_PWM_Init &rArr; GENERAL_TIM_Mode_Config &rArr; TIM_OC4Init
</UL>
<BR>[Calls]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GENERAL_TIM_Mode_Config
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GENERAL_TIM_GPIO_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[4]"></a>BusFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_it.o(i.BusFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[5a]"></a>Busy</STRONG> (Thumb, 106 bytes, Stack size 8 bytes, bsp_hj12864d.o(i.Busy))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Busy &rArr; GPIO_Configuration_in &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Configuration_in
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay
</UL>
<BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wrdataR
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wrdataL
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wrcomR
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wrcomL
</UL>

<P><STRONG><a name="[60]"></a>CMD_Send</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, bsp_usart_dma.o(i.CMD_Send))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = CMD_Send
</UL>
<BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Cmd
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_DMACmd
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HeartBeat
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendData
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ErrorListGet
</UL>

<P><STRONG><a name="[63]"></a>CreatTopicWindow</STRONG> (Thumb, 260 bytes, Stack size 16 bytes, bsp_hj12864d.o(i.CreatTopicWindow))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = CreatTopicWindow &rArr; wrdataR &rArr; Busy &rArr; GPIO_Configuration_in &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wrdataR
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wrdataL
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wrcomR
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wrcomL
</UL>
<BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ErrorDisplay
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingUpDisplay
</UL>

<P><STRONG><a name="[ba]"></a>DECToText</STRONG> (Thumb, 204 bytes, Stack size 12 bytes, bsp_hj12864d.o(i.DECToText))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = DECToText
</UL>
<BR>[Called By]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page16
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page12
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page4
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page36
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page35
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page32
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page31
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page30
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page29
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page28
</UL>

<P><STRONG><a name="[bd]"></a>DECToTextRight</STRONG> (Thumb, 342 bytes, Stack size 8 bytes, bsp_hj12864d.o(i.DECToTextRight))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DECToTextRight
</UL>
<BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page24
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page23
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page14
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page13
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page5
</UL>

<P><STRONG><a name="[18]"></a>DMA1_Channel4_IRQHandler</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, bsp_usart_dma.o(i.DMA1_Channel4_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DMA1_Channel4_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_GetFlagStatus
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Cmd
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ClearITPendingBit
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ClearFlag
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[6a]"></a>DMA_ClearFlag</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_dma.o(i.DMA_ClearFlag))
<BR><BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Channel4_IRQHandler
</UL>

<P><STRONG><a name="[69]"></a>DMA_ClearITPendingBit</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_dma.o(i.DMA_ClearITPendingBit))
<BR><BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Channel4_IRQHandler
</UL>

<P><STRONG><a name="[61]"></a>DMA_Cmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_dma.o(i.DMA_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MYDMA_Enable
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Channel4_IRQHandler
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CMD_Send
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USARTx_DMA_Config
</UL>

<P><STRONG><a name="[100]"></a>DMA_DeInit</STRONG> (Thumb, 324 bytes, Stack size 0 bytes, stm32f10x_dma.o(i.DMA_DeInit))
<BR><BR>[Called By]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USARTx_DMA_Config
</UL>

<P><STRONG><a name="[f5]"></a>DMA_GetCurrDataCounter</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f10x_dma.o(i.DMA_GetCurrDataCounter))
<BR><BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
</UL>

<P><STRONG><a name="[68]"></a>DMA_GetFlagStatus</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, stm32f10x_dma.o(i.DMA_GetFlagStatus))
<BR><BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Channel4_IRQHandler
</UL>

<P><STRONG><a name="[ff]"></a>DMA_ITConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_dma.o(i.DMA_ITConfig))
<BR><BR>[Called By]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USARTx_DMA_Config
</UL>

<P><STRONG><a name="[fe]"></a>DMA_Init</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, stm32f10x_dma.o(i.DMA_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DMA_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USARTx_DMA_Config
</UL>

<P><STRONG><a name="[af]"></a>DMA_SetCurrDataCounter</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_dma.o(i.DMA_SetCurrDataCounter))
<BR><BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MYDMA_Enable
</UL>

<P><STRONG><a name="[6b]"></a>DataREV</STRONG> (Thumb, 800 bytes, Stack size 40 bytes, bsp_updowndata.o(i.DataREV))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = DataREV &rArr; SendData &rArr; crc16l
</UL>
<BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crc16l
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendData
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[7]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.DebugMon_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[6e]"></a>DisplayString</STRONG> (Thumb, 718 bytes, Stack size 64 bytes, bsp_hj12864d.o(i.DisplayString))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = DisplayString &rArr; display_graphic_12x12 &rArr; wrdataR &rArr; Busy &rArr; GPIO_Configuration_in &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_BufferRead
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wrdataR
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wrdataL
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wrcomR
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wrcomL
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_graphic_12x12
</UL>
<BR>[Called By]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page25
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page22
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page16
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page1
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ErrorListShow
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ErrorDisplay
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page9
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page8
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page5
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page36
</UL>

<P><STRONG><a name="[71]"></a>Display_GBK12X12</STRONG> (Thumb, 116 bytes, Stack size 56 bytes, bsp_hj12864d.o(i.Display_GBK12X12))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = Display_GBK12X12 &rArr; display_graphic_12x12 &rArr; wrdataR &rArr; Busy &rArr; GPIO_Configuration_in &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_BufferRead
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_graphic_12x12
</UL>
<BR>[Called By]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page27
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page26
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page25
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page24
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page23
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page22
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page21
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page20
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page2
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page19
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page18
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page16
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page15
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page14
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page13
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page12
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page11
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page1
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UIDisplay
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingUpDisplay
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page9
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page8
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page7
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page6
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page5
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page4
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page36
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page35
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page34
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page33
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page32
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page31
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page30
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page3
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page29
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page28
</UL>

<P><STRONG><a name="[72]"></a>Display_Graphic_XXX</STRONG> (Thumb, 332 bytes, Stack size 56 bytes, bsp_hj12864d.o(i.Display_Graphic_XXX))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = Display_Graphic_XXX &rArr; wrdataR &rArr; Busy &rArr; GPIO_Configuration_in &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wrdataR
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wrdataL
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wrcomR
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wrcomL
</UL>
<BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page0
</UL>

<P><STRONG><a name="[73]"></a>Display_One_8x16</STRONG> (Thumb, 566 bytes, Stack size 48 bytes, bsp_hj12864d.o(i.Display_One_8x16))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = Display_One_8x16 &rArr; SPI_FLASH_BufferRead &rArr; SPI_FLASH_SendByte &rArr; SPI_TIMEOUT_UserCallback &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_BufferRead
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wrdataR
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wrdataL
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wrcomR
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wrcomL
</UL>
<BR>[Called By]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page20
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page15
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page10
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page5
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page32
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page30
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page29
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page28
</UL>

<P><STRONG><a name="[74]"></a>ErrorDisplay</STRONG> (Thumb, 524 bytes, Stack size 32 bytes, bsp_hj12864d.o(i.ErrorDisplay))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = ErrorDisplay &rArr; DisplayString &rArr; display_graphic_12x12 &rArr; wrdataR &rArr; Busy &rArr; GPIO_Configuration_in &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayString
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreatTopicWindow
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_string_5x8
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_graphic_12x12
</UL>
<BR>[Called By]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UIDisplay
</UL>

<P><STRONG><a name="[76]"></a>ErrorListGet</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, bsp_updowndata.o(i.ErrorListGet))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ErrorListGet &rArr; crc16l
</UL>
<BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CMD_Send
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crc16l
</UL>
<BR>[Called By]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page4
</UL>

<P><STRONG><a name="[77]"></a>ErrorListShow</STRONG> (Thumb, 710 bytes, Stack size 56 bytes, bsp_hj12864d.o(i.ErrorListShow))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = ErrorListShow &rArr; DisplayString &rArr; display_graphic_12x12 &rArr; wrdataR &rArr; Busy &rArr; GPIO_Configuration_in &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayString
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_string_5x8
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_graphic_12x12
</UL>
<BR>[Called By]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page4
</UL>

<P><STRONG><a name="[78]"></a>FactoryData_Read_Save</STRONG> (Thumb, 120 bytes, Stack size 16 bytes, bsp_setdata_eeprom.o(i.FactoryData_Read_Save))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = FactoryData_Read_Save &rArr; ee_WriteBytes &rArr; i2c_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ee_WriteOneBytes
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ee_WriteBytes
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ee_ReadOneBytes
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ee_ReadBytes
</UL>
<BR>[Called By]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SavingDataReadOout
</UL>

<P><STRONG><a name="[a3]"></a>FactoryRecoverFromFactory</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, bsp_setdata_eeprom.o(i.FactoryRecoverFromFactory))
<BR><BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyCtrl
</UL>

<P><STRONG><a name="[7d]"></a>FactorySettingData_Save</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, bsp_setdata_eeprom.o(i.FactorySettingData_Save))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = FactorySettingData_Save &rArr; ee_WriteBytes &rArr; i2c_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ee_WriteOneBytes
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ee_WriteBytes
</UL>
<BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyCtrl
</UL>

<P><STRONG><a name="[82]"></a>GPIO_Configuration</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, bsp_hj12864d.o(i.GPIO_Configuration))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = GPIO_Configuration &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HJ12864D_Init
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wrdataR
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wrdataL
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wrcomR
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wrcomL
</UL>

<P><STRONG><a name="[5d]"></a>GPIO_Configuration_in</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, bsp_hj12864d.o(i.GPIO_Configuration_in))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = GPIO_Configuration_in &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Busy
</UL>

<P><STRONG><a name="[7f]"></a>GPIO_Init</STRONG> (Thumb, 278 bytes, Stack size 24 bytes, stm32f10x_gpio.o(i.GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Configuration_in
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Configuration
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Config
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS422_IO_Init
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_CfgGpio
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_Init
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_IO_Init
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_IO_Init
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Configuration
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GENERAL_TIM_GPIO_Config
</UL>

<P><STRONG><a name="[aa]"></a>GPIO_PinRemapConfig</STRONG> (Thumb, 138 bytes, Stack size 20 bytes, stm32f10x_gpio.o(i.GPIO_PinRemapConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = GPIO_PinRemapConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_IO_Init
</UL>

<P><STRONG><a name="[5e]"></a>GPIO_ReadInputDataBit</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_gpio.o(i.GPIO_ReadInputDataBit))
<BR><BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Busy
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyData
</UL>

<P><STRONG><a name="[5c]"></a>GPIO_ResetBits</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_gpio.o(i.GPIO_ResetBits))
<BR><BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PORT_Assignment
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Busy
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS422_IO_Init
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_BufferRead
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_IO_Init
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LEDCtrl
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wrdataR
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wrdataL
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wrcomR
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wrcomL
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdint
</UL>

<P><STRONG><a name="[5b]"></a>GPIO_SetBits</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_gpio.o(i.GPIO_SetBits))
<BR><BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PORT_Assignment
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Busy
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS422_IO_Init
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_BufferRead
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_Init
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_IO_Init
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LEDCtrl
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wrdataR
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wrdataL
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wrcomR
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wrcomL
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdint
</UL>

<P><STRONG><a name="[84]"></a>HJ12864D_Init</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, bsp_hj12864d.o(i.HJ12864D_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = HJ12864D_Init &rArr; WindowClear &rArr; dispsameone &rArr; wrdataR &rArr; Busy &rArr; GPIO_Configuration_in &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Configuration
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdint
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WindowClear
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_it.o(i.HardFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[87]"></a>HeartBeat</STRONG> (Thumb, 102 bytes, Stack size 16 bytes, bsp_updowndata.o(i.HeartBeat))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = HeartBeat &rArr; crc16l
</UL>
<BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CMD_Send
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crc16l
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[8b]"></a>I2CReadSerial</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, bsp_sd3078.o(i.I2CReadSerial))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = I2CReadSerial &rArr; I2CSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CWaitAck
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CStop
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CStart
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CSendByte
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CReceiveByte
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CNoAck
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CAck
</UL>
<BR>[Called By]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD3078Init
</UL>

<P><STRONG><a name="[91]"></a>I2CWriteSerial</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, bsp_sd3078.o(i.I2CWriteSerial))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = I2CWriteSerial &rArr; WriteRTC_Enable &rArr; I2CSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteRTC_Enable
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteRTC_Disable
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CWaitAck
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CStop
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CStart
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CSendByte
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CAck
</UL>
<BR>[Called By]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD3078Init
</UL>

<P><STRONG><a name="[94]"></a>IIC_Init</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, bsp_sd3078.o(i.IIC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = IIC_Init &rArr; GPIO_Configuration &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Configuration
</UL>
<BR>[Called By]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD3078Init
</UL>

<P><STRONG><a name="[95]"></a>IWDG_Config</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, bsp_iwdg.o(i.IWDG_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = IWDG_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_WriteAccessCmd
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_SetReload
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_SetPrescaler
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_ReloadCounter
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_Enable
</UL>
<BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_Init
</UL>

<P><STRONG><a name="[9a]"></a>IWDG_Enable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f10x_iwdg.o(i.IWDG_Enable))
<BR><BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_Config
</UL>

<P><STRONG><a name="[9b]"></a>IWDG_Feed</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, bsp_iwdg.o(i.IWDG_Feed))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IWDG_Feed
</UL>
<BR>[Calls]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_ReloadCounter
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[9c]"></a>IWDG_Init</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, bsp_iwdg.o(i.IWDG_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = IWDG_Init &rArr; IWDG_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[99]"></a>IWDG_ReloadCounter</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f10x_iwdg.o(i.IWDG_ReloadCounter))
<BR><BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_Feed
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_Config
</UL>

<P><STRONG><a name="[97]"></a>IWDG_SetPrescaler</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_iwdg.o(i.IWDG_SetPrescaler))
<BR><BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_Config
</UL>

<P><STRONG><a name="[98]"></a>IWDG_SetReload</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_iwdg.o(i.IWDG_SetReload))
<BR><BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_Config
</UL>

<P><STRONG><a name="[96]"></a>IWDG_WriteAccessCmd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_iwdg.o(i.IWDG_WriteAccessCmd))
<BR><BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_Config
</UL>

<P><STRONG><a name="[9d]"></a>KeyCtrl</STRONG> (Thumb, 8670 bytes, Stack size 32 bytes, bsp_key.o(i.KeyCtrl))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = KeyCtrl &rArr; RecoverData_Write &rArr; ee_WriteBytes &rArr; i2c_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BL_CTRL
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RecoverData_Write
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_WriteDate
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_ReadDate
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OfflineDataRecovery
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OFFLineSettingData_Save
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LocalDataSave
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FactorySettingData_Save
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FactoryRecoverFromFactory
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyScan
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[a8]"></a>KeyData</STRONG> (Thumb, 170 bytes, Stack size 8 bytes, bsp_key.o(i.KeyData))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = KeyData
</UL>
<BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
</UL>
<BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyScan
</UL>

<P><STRONG><a name="[9e]"></a>KeyScan</STRONG> (Thumb, 214 bytes, Stack size 8 bytes, bsp_key.o(i.KeyScan))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = KeyScan &rArr; KeyData
</UL>
<BR>[Calls]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyData
</UL>
<BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyCtrl
</UL>

<P><STRONG><a name="[a9]"></a>Key_IO_Init</STRONG> (Thumb, 106 bytes, Stack size 8 bytes, bsp_key.o(i.Key_IO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Key_IO_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinRemapConfig
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[ab]"></a>LEDCtrl</STRONG> (Thumb, 104 bytes, Stack size 8 bytes, bsp_led.o(i.LEDCtrl))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LEDCtrl
</UL>
<BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[ac]"></a>LED_IO_Init</STRONG> (Thumb, 140 bytes, Stack size 8 bytes, bsp_led.o(i.LED_IO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = LED_IO_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[ad]"></a>LocalDataReadOut</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, bsp_setdata_eeprom.o(i.LocalDataReadOut))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = LocalDataReadOut &rArr; ee_ReadOneBytes &rArr; i2c_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ee_ReadOneBytes
</UL>
<BR>[Called By]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SavingDataReadOout
</UL>

<P><STRONG><a name="[a6]"></a>LocalDataSave</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, bsp_setdata_eeprom.o(i.LocalDataSave))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = LocalDataSave &rArr; ee_WriteOneBytes &rArr; i2c_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ee_WriteOneBytes
</UL>
<BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyCtrl
</UL>

<P><STRONG><a name="[ae]"></a>MYDMA_Enable</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, bsp_usart_dma.o(i.MYDMA_Enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = MYDMA_Enable
</UL>
<BR>[Calls]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_SetCurrDataCounter
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
</UL>

<P><STRONG><a name="[3]"></a>MemManage_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_it.o(i.MemManage_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.NMI_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[56]"></a>NVIC_Init</STRONG> (Thumb, 100 bytes, Stack size 16 bytes, misc.o(i.NVIC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = NVIC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USARTx_DMA_Config
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Config
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BASIC_TIM_NVIC_Config
</UL>

<P><STRONG><a name="[55]"></a>NVIC_PriorityGroupConfig</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, misc.o(i.NVIC_PriorityGroupConfig))
<BR><BR>[Called By]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USARTx_DMA_Config
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Config
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BASIC_TIM_NVIC_Config
</UL>

<P><STRONG><a name="[b0]"></a>OFFLineSettingData_Read</STRONG> (Thumb, 104 bytes, Stack size 32 bytes, bsp_setdata_eeprom.o(i.OFFLineSettingData_Read))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = OFFLineSettingData_Read &rArr; ee_ReadBytes &rArr; i2c_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ee_ReadOneBytes
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ee_ReadBytes
</UL>
<BR>[Called By]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SavingDataReadOout
</UL>

<P><STRONG><a name="[9f]"></a>OFFLineSettingData_Save</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, bsp_setdata_eeprom.o(i.OFFLineSettingData_Save))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = OFFLineSettingData_Save &rArr; ee_WriteBytes &rArr; i2c_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ee_WriteOneBytes
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ee_WriteBytes
</UL>
<BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyCtrl
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OfflineDataRecovery
</UL>

<P><STRONG><a name="[a2]"></a>OfflineDataRecovery</STRONG> (Thumb, 30 bytes, Stack size 24 bytes, bsp_setdata_eeprom.o(i.OfflineDataRecovery))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = OfflineDataRecovery &rArr; OFFLineSettingData_Save &rArr; ee_WriteBytes &rArr; i2c_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TransmitData
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OFFLineSettingData_Save
</UL>
<BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyCtrl
</UL>

<P><STRONG><a name="[b2]"></a>PORT_Assignment</STRONG> (Thumb, 198 bytes, Stack size 8 bytes, bsp_hj12864d.o(i.PORT_Assignment))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = PORT_Assignment
</UL>
<BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wrdataR
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wrdataL
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wrcomR
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wrcomL
</UL>

<P><STRONG><a name="[b3]"></a>Page0</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, bsp_hj12864d.o(i.Page0))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = Page0 &rArr; Display_Graphic_XXX &rArr; wrdataR &rArr; Busy &rArr; GPIO_Configuration_in &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_Graphic_XXX
</UL>
<BR>[Called By]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UIDisplay
</UL>

<P><STRONG><a name="[b4]"></a>Page1</STRONG> (Thumb, 364 bytes, Stack size 8 bytes, bsp_hj12864d.o(i.Page1))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = Page1 &rArr; DisplayString &rArr; display_graphic_12x12 &rArr; wrdataR &rArr; Busy &rArr; GPIO_Configuration_in &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_GBK12X12
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayString
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dispsameone
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_string_5x8
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WindowClear
</UL>
<BR>[Called By]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UIDisplay
</UL>

<P><STRONG><a name="[b6]"></a>Page10</STRONG> (Thumb, 204 bytes, Stack size 16 bytes, bsp_hj12864d.o(i.Page10))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = Page10 &rArr; Display_One_8x16 &rArr; SPI_FLASH_BufferRead &rArr; SPI_FLASH_SendByte &rArr; SPI_TIMEOUT_UserCallback &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_One_8x16
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WindowClear
</UL>
<BR>[Called By]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UIDisplay
</UL>

<P><STRONG><a name="[b7]"></a>Page11</STRONG> (Thumb, 296 bytes, Stack size 8 bytes, bsp_hj12864d.o(i.Page11))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = Page11 &rArr; Display_GBK12X12 &rArr; display_graphic_12x12 &rArr; wrdataR &rArr; Busy &rArr; GPIO_Configuration_in &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_GBK12X12
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_string_5x8
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_graphic_16x16
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WindowClear
</UL>
<BR>[Called By]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UIDisplay
</UL>

<P><STRONG><a name="[b9]"></a>Page12</STRONG> (Thumb, 194 bytes, Stack size 32 bytes, bsp_hj12864d.o(i.Page12))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = Page12 &rArr; Display_GBK12X12 &rArr; display_graphic_12x12 &rArr; wrdataR &rArr; Busy &rArr; GPIO_Configuration_in &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_GBK12X12
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DECToText
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_string_8x16
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_graphic_16x16
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WindowClear
</UL>
<BR>[Called By]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UIDisplay
</UL>

<P><STRONG><a name="[bc]"></a>Page13</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, bsp_hj12864d.o(i.Page13))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = Page13 &rArr; Display_GBK12X12 &rArr; display_graphic_12x12 &rArr; wrdataR &rArr; Busy &rArr; GPIO_Configuration_in &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_GBK12X12
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DECToTextRight
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_string_8x16
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WindowClear
</UL>
<BR>[Called By]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UIDisplay
</UL>

<P><STRONG><a name="[be]"></a>Page14</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, bsp_hj12864d.o(i.Page14))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = Page14 &rArr; Display_GBK12X12 &rArr; display_graphic_12x12 &rArr; wrdataR &rArr; Busy &rArr; GPIO_Configuration_in &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_GBK12X12
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DECToTextRight
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_string_8x16
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WindowClear
</UL>
<BR>[Called By]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UIDisplay
</UL>

<P><STRONG><a name="[bf]"></a>Page15</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, bsp_hj12864d.o(i.Page15))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = Page15 &rArr; Display_GBK12X12 &rArr; display_graphic_12x12 &rArr; wrdataR &rArr; Busy &rArr; GPIO_Configuration_in &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_One_8x16
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_GBK12X12
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WindowClear
</UL>
<BR>[Called By]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UIDisplay
</UL>

<P><STRONG><a name="[c0]"></a>Page16</STRONG> (Thumb, 182 bytes, Stack size 32 bytes, bsp_hj12864d.o(i.Page16))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = Page16 &rArr; DisplayString &rArr; display_graphic_12x12 &rArr; wrdataR &rArr; Busy &rArr; GPIO_Configuration_in &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_GBK12X12
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayString
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DECToText
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_string_8x16
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_graphic_16x16
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WindowClear
</UL>
<BR>[Called By]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UIDisplay
</UL>

<P><STRONG><a name="[c1]"></a>Page18</STRONG> (Thumb, 296 bytes, Stack size 8 bytes, bsp_hj12864d.o(i.Page18))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = Page18 &rArr; Display_GBK12X12 &rArr; display_graphic_12x12 &rArr; wrdataR &rArr; Busy &rArr; GPIO_Configuration_in &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_GBK12X12
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_string_5x8
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_graphic_16x16
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WindowClear
</UL>
<BR>[Called By]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UIDisplay
</UL>

<P><STRONG><a name="[c2]"></a>Page19</STRONG> (Thumb, 158 bytes, Stack size 8 bytes, bsp_hj12864d.o(i.Page19))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = Page19 &rArr; Display_GBK12X12 &rArr; display_graphic_12x12 &rArr; wrdataR &rArr; Busy &rArr; GPIO_Configuration_in &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_GBK12X12
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_string_8x16
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_string_5x8
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_graphic_16x16
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WindowClear
</UL>
<BR>[Called By]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UIDisplay
</UL>

<P><STRONG><a name="[c3]"></a>Page2</STRONG> (Thumb, 470 bytes, Stack size 8 bytes, bsp_hj12864d.o(i.Page2))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = Page2 &rArr; Display_GBK12X12 &rArr; display_graphic_12x12 &rArr; wrdataR &rArr; Busy &rArr; GPIO_Configuration_in &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_GBK12X12
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_string_5x8
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_graphic_16x16
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WindowClear
</UL>
<BR>[Called By]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UIDisplay
</UL>

<P><STRONG><a name="[c4]"></a>Page20</STRONG> (Thumb, 710 bytes, Stack size 56 bytes, bsp_hj12864d.o(i.Page20))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = Page20 &rArr; Display_GBK12X12 &rArr; display_graphic_12x12 &rArr; wrdataR &rArr; Busy &rArr; GPIO_Configuration_in &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_One_8x16
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_GBK12X12
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_string_8x16
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WindowClear
</UL>
<BR>[Called By]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UIDisplay
</UL>

<P><STRONG><a name="[c5]"></a>Page21</STRONG> (Thumb, 796 bytes, Stack size 8 bytes, bsp_hj12864d.o(i.Page21))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = Page21 &rArr; Display_GBK12X12 &rArr; display_graphic_12x12 &rArr; wrdataR &rArr; Busy &rArr; GPIO_Configuration_in &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_GBK12X12
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_string_8x16
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_string_5x8
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_graphic_16x16
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WindowClear
</UL>
<BR>[Called By]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UIDisplay
</UL>

<P><STRONG><a name="[c6]"></a>Page22</STRONG> (Thumb, 774 bytes, Stack size 16 bytes, bsp_hj12864d.o(i.Page22))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = Page22 &rArr; DisplayString &rArr; display_graphic_12x12 &rArr; wrdataR &rArr; Busy &rArr; GPIO_Configuration_in &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_GBK12X12
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayString
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_string_5x8
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_graphic_16x16
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WindowClear
</UL>
<BR>[Called By]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UIDisplay
</UL>

<P><STRONG><a name="[c7]"></a>Page23</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, bsp_hj12864d.o(i.Page23))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = Page23 &rArr; Display_GBK12X12 &rArr; display_graphic_12x12 &rArr; wrdataR &rArr; Busy &rArr; GPIO_Configuration_in &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_GBK12X12
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DECToTextRight
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_string_8x16
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WindowClear
</UL>
<BR>[Called By]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UIDisplay
</UL>

<P><STRONG><a name="[c8]"></a>Page24</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, bsp_hj12864d.o(i.Page24))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = Page24 &rArr; Display_GBK12X12 &rArr; display_graphic_12x12 &rArr; wrdataR &rArr; Busy &rArr; GPIO_Configuration_in &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_GBK12X12
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DECToTextRight
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_string_8x16
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WindowClear
</UL>
<BR>[Called By]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UIDisplay
</UL>

<P><STRONG><a name="[c9]"></a>Page25</STRONG> (Thumb, 312 bytes, Stack size 16 bytes, bsp_hj12864d.o(i.Page25))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = Page25 &rArr; DisplayString &rArr; display_graphic_12x12 &rArr; wrdataR &rArr; Busy &rArr; GPIO_Configuration_in &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_GBK12X12
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayString
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_string_5x8
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_graphic_16x16
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WindowClear
</UL>
<BR>[Called By]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UIDisplay
</UL>

<P><STRONG><a name="[ca]"></a>Page26</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, bsp_hj12864d.o(i.Page26))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = Page26 &rArr; Display_GBK12X12 &rArr; display_graphic_12x12 &rArr; wrdataR &rArr; Busy &rArr; GPIO_Configuration_in &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_GBK12X12
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WindowClear
</UL>
<BR>[Called By]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UIDisplay
</UL>

<P><STRONG><a name="[cb]"></a>Page27</STRONG> (Thumb, 556 bytes, Stack size 8 bytes, bsp_hj12864d.o(i.Page27))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = Page27 &rArr; Display_GBK12X12 &rArr; display_graphic_12x12 &rArr; wrdataR &rArr; Busy &rArr; GPIO_Configuration_in &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_GBK12X12
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_string_8x16
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_string_5x8
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_graphic_16x16
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WindowClear
</UL>
<BR>[Called By]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UIDisplay
</UL>

<P><STRONG><a name="[cc]"></a>Page28</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, bsp_hj12864d.o(i.Page28))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = Page28 &rArr; Display_GBK12X12 &rArr; display_graphic_12x12 &rArr; wrdataR &rArr; Busy &rArr; GPIO_Configuration_in &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_One_8x16
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_GBK12X12
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DECToText
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_string_8x16
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WindowClear
</UL>
<BR>[Called By]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UIDisplay
</UL>

<P><STRONG><a name="[cd]"></a>Page29</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, bsp_hj12864d.o(i.Page29))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = Page29 &rArr; Display_GBK12X12 &rArr; display_graphic_12x12 &rArr; wrdataR &rArr; Busy &rArr; GPIO_Configuration_in &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_One_8x16
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_GBK12X12
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DECToText
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_string_8x16
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WindowClear
</UL>
<BR>[Called By]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UIDisplay
</UL>

<P><STRONG><a name="[ce]"></a>Page3</STRONG> (Thumb, 296 bytes, Stack size 8 bytes, bsp_hj12864d.o(i.Page3))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = Page3 &rArr; Display_GBK12X12 &rArr; display_graphic_12x12 &rArr; wrdataR &rArr; Busy &rArr; GPIO_Configuration_in &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_GBK12X12
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_string_5x8
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_graphic_16x16
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WindowClear
</UL>
<BR>[Called By]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UIDisplay
</UL>

<P><STRONG><a name="[cf]"></a>Page30</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, bsp_hj12864d.o(i.Page30))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = Page30 &rArr; Display_GBK12X12 &rArr; display_graphic_12x12 &rArr; wrdataR &rArr; Busy &rArr; GPIO_Configuration_in &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_One_8x16
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_GBK12X12
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DECToText
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_string_8x16
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WindowClear
</UL>
<BR>[Called By]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UIDisplay
</UL>

<P><STRONG><a name="[d0]"></a>Page31</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, bsp_hj12864d.o(i.Page31))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = Page31 &rArr; Display_GBK12X12 &rArr; display_graphic_12x12 &rArr; wrdataR &rArr; Busy &rArr; GPIO_Configuration_in &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_GBK12X12
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DECToText
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_string_8x16
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WindowClear
</UL>
<BR>[Called By]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UIDisplay
</UL>

<P><STRONG><a name="[d1]"></a>Page32</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, bsp_hj12864d.o(i.Page32))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = Page32 &rArr; Display_GBK12X12 &rArr; display_graphic_12x12 &rArr; wrdataR &rArr; Busy &rArr; GPIO_Configuration_in &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_One_8x16
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_GBK12X12
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DECToText
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_string_8x16
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WindowClear
</UL>
<BR>[Called By]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UIDisplay
</UL>

<P><STRONG><a name="[d2]"></a>Page33</STRONG> (Thumb, 774 bytes, Stack size 8 bytes, bsp_hj12864d.o(i.Page33))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = Page33 &rArr; Display_GBK12X12 &rArr; display_graphic_12x12 &rArr; wrdataR &rArr; Busy &rArr; GPIO_Configuration_in &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_GBK12X12
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_string_5x8
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_graphic_16x16
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WindowClear
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page33_TimeShow
</UL>
<BR>[Called By]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UIDisplay
</UL>

<P><STRONG><a name="[d3]"></a>Page33_TimeShow</STRONG> (Thumb, 344 bytes, Stack size 16 bytes, bsp_hj12864d.o(i.Page33_TimeShow))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = Page33_TimeShow &rArr; display_string_5x8 &rArr; SPI_FLASH_BufferRead &rArr; SPI_FLASH_SendByte &rArr; SPI_TIMEOUT_UserCallback &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_string_5x8
</UL>
<BR>[Called By]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page34
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page33
</UL>

<P><STRONG><a name="[d4]"></a>Page34</STRONG> (Thumb, 794 bytes, Stack size 8 bytes, bsp_hj12864d.o(i.Page34))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = Page34 &rArr; Display_GBK12X12 &rArr; display_graphic_12x12 &rArr; wrdataR &rArr; Busy &rArr; GPIO_Configuration_in &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_GBK12X12
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_string_5x8
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_graphic_16x16
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WindowClear
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page33_TimeShow
</UL>
<BR>[Called By]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UIDisplay
</UL>

<P><STRONG><a name="[d5]"></a>Page35</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, bsp_hj12864d.o(i.Page35))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = Page35 &rArr; Display_GBK12X12 &rArr; display_graphic_12x12 &rArr; wrdataR &rArr; Busy &rArr; GPIO_Configuration_in &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_GBK12X12
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DECToText
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_string_8x16
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WindowClear
</UL>
<BR>[Called By]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UIDisplay
</UL>

<P><STRONG><a name="[d6]"></a>Page36</STRONG> (Thumb, 134 bytes, Stack size 32 bytes, bsp_hj12864d.o(i.Page36))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = Page36 &rArr; DisplayString &rArr; display_graphic_12x12 &rArr; wrdataR &rArr; Busy &rArr; GPIO_Configuration_in &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_GBK12X12
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayString
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DECToText
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_string_8x16
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WindowClear
</UL>
<BR>[Called By]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UIDisplay
</UL>

<P><STRONG><a name="[d7]"></a>Page4</STRONG> (Thumb, 152 bytes, Stack size 32 bytes, bsp_hj12864d.o(i.Page4))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = Page4 &rArr; ErrorListShow &rArr; DisplayString &rArr; display_graphic_12x12 &rArr; wrdataR &rArr; Busy &rArr; GPIO_Configuration_in &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ErrorListShow
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_GBK12X12
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DECToText
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ErrorListGet
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_string_8x16
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_string_5x8
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WindowClear
</UL>
<BR>[Called By]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UIDisplay
</UL>

<P><STRONG><a name="[d8]"></a>Page5</STRONG> (Thumb, 724 bytes, Stack size 24 bytes, bsp_hj12864d.o(i.Page5))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = Page5 &rArr; DisplayString &rArr; display_graphic_12x12 &rArr; wrdataR &rArr; Busy &rArr; GPIO_Configuration_in &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_One_8x16
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_GBK12X12
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayString
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DECToTextRight
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_string_8x16
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_string_5x8
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_graphic_16x16
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WindowClear
</UL>
<BR>[Called By]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UIDisplay
</UL>

<P><STRONG><a name="[d9]"></a>Page6</STRONG> (Thumb, 158 bytes, Stack size 8 bytes, bsp_hj12864d.o(i.Page6))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = Page6 &rArr; Display_GBK12X12 &rArr; display_graphic_12x12 &rArr; wrdataR &rArr; Busy &rArr; GPIO_Configuration_in &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_GBK12X12
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_string_5x8
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_graphic_16x16
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WindowClear
</UL>
<BR>[Called By]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UIDisplay
</UL>

<P><STRONG><a name="[da]"></a>Page7</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, bsp_hj12864d.o(i.Page7))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = Page7 &rArr; Display_GBK12X12 &rArr; display_graphic_12x12 &rArr; wrdataR &rArr; Busy &rArr; GPIO_Configuration_in &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_GBK12X12
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_string_8x16
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WindowClear
</UL>
<BR>[Called By]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UIDisplay
</UL>

<P><STRONG><a name="[db]"></a>Page8</STRONG> (Thumb, 628 bytes, Stack size 8 bytes, bsp_hj12864d.o(i.Page8))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = Page8 &rArr; DisplayString &rArr; display_graphic_12x12 &rArr; wrdataR &rArr; Busy &rArr; GPIO_Configuration_in &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_GBK12X12
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayString
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WindowClear
</UL>
<BR>[Called By]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UIDisplay
</UL>

<P><STRONG><a name="[dc]"></a>Page9</STRONG> (Thumb, 626 bytes, Stack size 8 bytes, bsp_hj12864d.o(i.Page9))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = Page9 &rArr; DisplayString &rArr; display_graphic_12x12 &rArr; wrdataR &rArr; Busy &rArr; GPIO_Configuration_in &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_GBK12X12
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayString
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WindowClear
</UL>
<BR>[Called By]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UIDisplay
</UL>

<P><STRONG><a name="[8]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.PendSV_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[fd]"></a>RCC_AHBPeriphClockCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f10x_rcc.o(i.RCC_AHBPeriphClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USARTx_DMA_Config
</UL>

<P><STRONG><a name="[50]"></a>RCC_APB1PeriphClockCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f10x_rcc.o(i.RCC_APB1PeriphClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GENERAL_TIM_Mode_Config
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BASIC_TIM_Mode_Config
</UL>

<P><STRONG><a name="[7e]"></a>RCC_APB2PeriphClockCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f10x_rcc.o(i.RCC_APB2PeriphClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Configuration
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Config
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS422_IO_Init
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_CfgGpio
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_Init
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_IO_Init
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_IO_Init
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Configuration
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GENERAL_TIM_GPIO_Config
</UL>

<P><STRONG><a name="[fb]"></a>RCC_GetClocksFreq</STRONG> (Thumb, 192 bytes, Stack size 12 bytes, stm32f10x_rcc.o(i.RCC_GetClocksFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = RCC_GetClocksFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
</UL>

<P><STRONG><a name="[de]"></a>RTCDataGet</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, bsp_sd3078.o(i.RTCDataGet))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = RTCDataGet &rArr; RTCUpdata &rArr; display_string_5x8 &rArr; SPI_FLASH_BufferRead &rArr; SPI_FLASH_SendByte &rArr; SPI_TIMEOUT_UserCallback &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_ReadDate
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTCUpdata
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[df]"></a>RTCUpdata</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, bsp_hj12864d.o(i.RTCUpdata))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = RTCUpdata &rArr; display_string_5x8 &rArr; SPI_FLASH_BufferRead &rArr; SPI_FLASH_SendByte &rArr; SPI_TIMEOUT_UserCallback &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_string_5x8
</UL>
<BR>[Called By]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UIDisplay
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTCDataGet
</UL>

<P><STRONG><a name="[a0]"></a>RTC_ReadDate</STRONG> (Thumb, 134 bytes, Stack size 8 bytes, bsp_sd3078.o(i.RTC_ReadDate))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = RTC_ReadDate &rArr; I2CSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CWaitAck
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CStop
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CStart
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CSendByte
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CReceiveByte
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CNoAck
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CAck
</UL>
<BR>[Called By]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD3078Init
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTCDataGet
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyCtrl
</UL>

<P><STRONG><a name="[a1]"></a>RTC_WriteDate</STRONG> (Thumb, 128 bytes, Stack size 8 bytes, bsp_sd3078.o(i.RTC_WriteDate))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = RTC_WriteDate &rArr; WriteRTC_Enable &rArr; I2CSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteRTC_Enable
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteRTC_Disable
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CWaitAck
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CStop
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CStart
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CSendByte
</UL>
<BR>[Called By]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD3078Init
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyCtrl
</UL>

<P><STRONG><a name="[e0]"></a>RecoverData_Read</STRONG> (Thumb, 182 bytes, Stack size 24 bytes, bsp_setdata_eeprom.o(i.RecoverData_Read))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = RecoverData_Read &rArr; ee_ReadBytes &rArr; i2c_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ee_ReadOneBytes
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ee_ReadBytes
</UL>
<BR>[Called By]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SavingDataReadOout
</UL>

<P><STRONG><a name="[a5]"></a>RecoverData_Write</STRONG> (Thumb, 252 bytes, Stack size 40 bytes, bsp_setdata_eeprom.o(i.RecoverData_Write))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = RecoverData_Write &rArr; ee_WriteBytes &rArr; i2c_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ee_WriteOneBytes
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ee_WriteBytes
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TransmitData
</UL>
<BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyCtrl
</UL>

<P><STRONG><a name="[e1]"></a>SD3078Init</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, bsp_sd3078.o(i.SD3078Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = SD3078Init &rArr; I2CWriteSerial &rArr; WriteRTC_Enable &rArr; I2CSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Init
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CWriteSerial
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CReadSerial
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_WriteDate
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_ReadDate
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[e5]"></a>SPI_Cmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_spi.o(i.SPI_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_Init
</UL>

<P><STRONG><a name="[6f]"></a>SPI_FLASH_BufferRead</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, bsp_spi_flash.o(i.SPI_FLASH_BufferRead))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = SPI_FLASH_BufferRead &rArr; SPI_FLASH_SendByte &rArr; SPI_TIMEOUT_UserCallback &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_SendByte
</UL>
<BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_One_8x16
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_GBK12X12
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayString
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_string_8x16
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_string_5x8
</UL>

<P><STRONG><a name="[e3]"></a>SPI_FLASH_Init</STRONG> (Thumb, 178 bytes, Stack size 32 bytes, bsp_spi_flash.o(i.SPI_FLASH_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = SPI_FLASH_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Init
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Cmd
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[e2]"></a>SPI_FLASH_SendByte</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, bsp_spi_flash.o(i.SPI_FLASH_SendByte))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = SPI_FLASH_SendByte &rArr; SPI_TIMEOUT_UserCallback &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_SendData
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_ReceiveData
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_GetFlagStatus
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_TIMEOUT_UserCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_BufferRead
</UL>

<P><STRONG><a name="[e7]"></a>SPI_I2S_GetFlagStatus</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_spi.o(i.SPI_I2S_GetFlagStatus))
<BR><BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_SendByte
</UL>

<P><STRONG><a name="[e9]"></a>SPI_I2S_ReceiveData</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_spi.o(i.SPI_I2S_ReceiveData))
<BR><BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_SendByte
</UL>

<P><STRONG><a name="[e8]"></a>SPI_I2S_SendData</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_spi.o(i.SPI_I2S_SendData))
<BR><BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_SendByte
</UL>

<P><STRONG><a name="[e4]"></a>SPI_Init</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, stm32f10x_spi.o(i.SPI_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SPI_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_Init
</UL>

<P><STRONG><a name="[6]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.SVC_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[eb]"></a>SavingDataReadOout</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, bsp_setdata_eeprom.o(i.SavingDataReadOout))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = SavingDataReadOout &rArr; OFFLineSettingData_Read &rArr; ee_ReadBytes &rArr; i2c_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RecoverData_Read
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OFFLineSettingData_Read
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LocalDataReadOut
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FactoryData_Read_Save
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[6d]"></a>SendData</STRONG> (Thumb, 138 bytes, Stack size 32 bytes, bsp_updowndata.o(i.SendData))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = SendData &rArr; crc16l
</UL>
<BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CMD_Send
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crc16l
</UL>
<BR>[Called By]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendSetUpData
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataREV
</UL>

<P><STRONG><a name="[ec]"></a>SendSetUpData</STRONG> (Thumb, 280 bytes, Stack size 8 bytes, bsp_updowndata.o(i.SendSetUpData))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = SendSetUpData &rArr; SendData &rArr; crc16l
</UL>
<BR>[Calls]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TransmitData
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendData
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[ef]"></a>SettingUpDisplay</STRONG> (Thumb, 106 bytes, Stack size 8 bytes, bsp_hj12864d.o(i.SettingUpDisplay))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = SettingUpDisplay &rArr; Display_GBK12X12 &rArr; display_graphic_12x12 &rArr; wrdataR &rArr; Busy &rArr; GPIO_Configuration_in &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_GBK12X12
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreatTopicWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UIDisplay
</UL>

<P><STRONG><a name="[9]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.SysTick_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[47]"></a>SystemInit</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, system_stm32f10x.o(i.SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = SystemInit &rArr; SetSysClock &rArr; SetSysClockTo72
</UL>
<BR>[Calls]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClock
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(.text)
</UL>
<P><STRONG><a name="[40]"></a>TIM6_IRQHandler</STRONG> (Thumb, 254 bytes, Stack size 8 bytes, bsp_timbase.o(i.TIM6_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = TIM6_IRQHandler &rArr; TIM_GetITStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_GetITStatus
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ClearITPendingBit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[52]"></a>TIM_ClearFlag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_tim.o(i.TIM_ClearFlag))
<BR><BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BASIC_TIM_Mode_Config
</UL>

<P><STRONG><a name="[f1]"></a>TIM_ClearITPendingBit</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_tim.o(i.TIM_ClearITPendingBit))
<BR><BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM6_IRQHandler
</UL>

<P><STRONG><a name="[54]"></a>TIM_Cmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_tim.o(i.TIM_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GENERAL_TIM_Mode_Config
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BASIC_TIM_Mode_Config
</UL>

<P><STRONG><a name="[f0]"></a>TIM_GetITStatus</STRONG> (Thumb, 34 bytes, Stack size 12 bytes, stm32f10x_tim.o(i.TIM_GetITStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = TIM_GetITStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM6_IRQHandler
</UL>

<P><STRONG><a name="[53]"></a>TIM_ITConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_tim.o(i.TIM_ITConfig))
<BR><BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BASIC_TIM_Mode_Config
</UL>

<P><STRONG><a name="[80]"></a>TIM_OC4Init</STRONG> (Thumb, 114 bytes, Stack size 16 bytes, stm32f10x_tim.o(i.TIM_OC4Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TIM_OC4Init
</UL>
<BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GENERAL_TIM_Mode_Config
</UL>

<P><STRONG><a name="[81]"></a>TIM_OC4PreloadConfig</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f10x_tim.o(i.TIM_OC4PreloadConfig))
<BR><BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GENERAL_TIM_Mode_Config
</UL>

<P><STRONG><a name="[51]"></a>TIM_TimeBaseInit</STRONG> (Thumb, 122 bytes, Stack size 0 bytes, stm32f10x_tim.o(i.TIM_TimeBaseInit))
<BR><BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GENERAL_TIM_Mode_Config
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BASIC_TIM_Mode_Config
</UL>

<P><STRONG><a name="[b1]"></a>TransmitData</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, bsp_setdata_eeprom.o(i.TransmitData))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TransmitData
</UL>
<BR>[Called By]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendSetUpData
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RecoverData_Write
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OfflineDataRecovery
</UL>

<P><STRONG><a name="[f2]"></a>UIDisplay</STRONG> (Thumb, 580 bytes, Stack size 16 bytes, bsp_hj12864d.o(i.UIDisplay))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = UIDisplay &rArr; Page4 &rArr; ErrorListShow &rArr; DisplayString &rArr; display_graphic_12x12 &rArr; wrdataR &rArr; Busy &rArr; GPIO_Configuration_in &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page27
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page26
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page25
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page24
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page23
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page22
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page21
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page20
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page2
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page19
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page18
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page16
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page15
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page14
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page13
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page12
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page11
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page10
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page1
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page0
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ErrorDisplay
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_GBK12X12
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingUpDisplay
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTCUpdata
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page9
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page8
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page7
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page6
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page5
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page4
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page36
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page35
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page34
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page33
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page32
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page31
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page30
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page3
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page29
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page28
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2f]"></a>USART1_IRQHandler</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, bsp_usart_dma.o(i.USART1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = USART1_IRQHandler &rArr; USART_GetITStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_GetCurrDataCounter
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MYDMA_Enable
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ReceiveData
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetITStatus
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ClearITPendingBit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[f6]"></a>USART_ClearITPendingBit</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, stm32f10x_usart.o(i.USART_ClearITPendingBit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = USART_ClearITPendingBit
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
</UL>

<P><STRONG><a name="[fa]"></a>USART_Cmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_usart.o(i.USART_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Config
</UL>

<P><STRONG><a name="[62]"></a>USART_DMACmd</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_usart.o(i.USART_DMACmd))
<BR><BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CMD_Send
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USARTx_DMA_Config
</UL>

<P><STRONG><a name="[10f]"></a>USART_GetFlagStatus</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f10x_usart.o(i.USART_GetFlagStatus))
<BR><BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
</UL>

<P><STRONG><a name="[f3]"></a>USART_GetITStatus</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, stm32f10x_usart.o(i.USART_GetITStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = USART_GetITStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
</UL>

<P><STRONG><a name="[f9]"></a>USART_ITConfig</STRONG> (Thumb, 74 bytes, Stack size 20 bytes, stm32f10x_usart.o(i.USART_ITConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = USART_ITConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Config
</UL>

<P><STRONG><a name="[f8]"></a>USART_Init</STRONG> (Thumb, 210 bytes, Stack size 56 bytes, stm32f10x_usart.o(i.USART_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetClocksFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Config
</UL>

<P><STRONG><a name="[f4]"></a>USART_ReceiveData</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f10x_usart.o(i.USART_ReceiveData))
<BR><BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
</UL>

<P><STRONG><a name="[10e]"></a>USART_SendData</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f10x_usart.o(i.USART_SendData))
<BR><BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
</UL>

<P><STRONG><a name="[101]"></a>USARTx_DMA_Init</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, bsp_usart_dma.o(i.USARTx_DMA_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = USARTx_DMA_Init &rArr; USART_Config &rArr; USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USARTx_DMA_Config
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Config
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS422_IO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[5]"></a>UsageFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_it.o(i.UsageFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[86]"></a>WindowClear</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, bsp_hj12864d.o(i.WindowClear))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = WindowClear &rArr; dispsameone &rArr; wrdataR &rArr; Busy &rArr; GPIO_Configuration_in &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dispsameone
</UL>
<BR>[Called By]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page27
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page26
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page25
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page24
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page23
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page22
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page21
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page20
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page2
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page19
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page18
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page16
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page15
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page14
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page13
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page12
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page11
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page10
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page1
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HJ12864D_Init
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page9
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page8
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page7
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page6
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page5
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page4
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page36
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page35
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page34
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page33
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page32
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page31
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page30
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page3
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page29
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page28
</UL>

<P><STRONG><a name="[93]"></a>WriteRTC_Disable</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, bsp_sd3078.o(i.WriteRTC_Disable))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = WriteRTC_Disable &rArr; I2CSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CWaitAck
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CStop
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CStart
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CSendByte
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CWriteSerial
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_WriteDate
</UL>

<P><STRONG><a name="[92]"></a>WriteRTC_Enable</STRONG> (Thumb, 98 bytes, Stack size 8 bytes, bsp_sd3078.o(i.WriteRTC_Enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = WriteRTC_Enable &rArr; I2CSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CWaitAck
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CStop
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CStart
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CSendByte
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CWriteSerial
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_WriteDate
</UL>

<P><STRONG><a name="[102]"></a>__0printf$1</STRONG> (Thumb, 22 bytes, Stack size 24 bytes, printf1.o(i.__0printf$1), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[11f]"></a>__1printf$1</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf1.o(i.__0printf$1), UNUSED)

<P><STRONG><a name="[ea]"></a>__2printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf1.o(i.__0printf$1))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_TIMEOUT_UserCallback
</UL>

<P><STRONG><a name="[120]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[121]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[122]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[6c]"></a>crc16l</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, bsp_updowndata.o(i.crc16l))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = crc16l
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HeartBeat
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataREV
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendData
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ErrorListGet
</UL>

<P><STRONG><a name="[5f]"></a>delay</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, bsp_hj12864d.o(i.delay))
<BR><BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Busy
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wrdataR
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wrdataL
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wrcomR
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wrcomL
</UL>

<P><STRONG><a name="[112]"></a>delay_ms</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, bsp_hj12864d.o(i.delay_ms))
<BR><BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdint
</UL>

<P><STRONG><a name="[70]"></a>display_graphic_12x12</STRONG> (Thumb, 406 bytes, Stack size 32 bytes, bsp_hj12864d.o(i.display_graphic_12x12))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = display_graphic_12x12 &rArr; wrdataR &rArr; Busy &rArr; GPIO_Configuration_in &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wrdataR
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wrdataL
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wrcomR
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wrcomL
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ErrorListShow
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ErrorDisplay
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_GBK12X12
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayString
</UL>

<P><STRONG><a name="[b8]"></a>display_graphic_16x16</STRONG> (Thumb, 406 bytes, Stack size 32 bytes, bsp_hj12864d.o(i.display_graphic_16x16))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = display_graphic_16x16 &rArr; wrdataR &rArr; Busy &rArr; GPIO_Configuration_in &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wrdataR
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wrdataL
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wrcomR
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wrcomL
</UL>
<BR>[Called By]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page27
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page25
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page22
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page21
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page2
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page19
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page18
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page16
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page12
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page11
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page6
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page5
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page34
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page33
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page3
</UL>

<P><STRONG><a name="[75]"></a>display_string_5x8</STRONG> (Thumb, 652 bytes, Stack size 48 bytes, bsp_hj12864d.o(i.display_string_5x8))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = display_string_5x8 &rArr; SPI_FLASH_BufferRead &rArr; SPI_FLASH_SendByte &rArr; SPI_TIMEOUT_UserCallback &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_BufferRead
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wrdataR
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wrdataL
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wrcomR
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wrcomL
</UL>
<BR>[Called By]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page27
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page25
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page22
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page21
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page2
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page19
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page18
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page11
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page1
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ErrorListShow
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ErrorDisplay
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTCUpdata
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page6
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page5
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page4
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page34
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page33_TimeShow
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page33
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page3
</UL>

<P><STRONG><a name="[bb]"></a>display_string_8x16</STRONG> (Thumb, 606 bytes, Stack size 56 bytes, bsp_hj12864d.o(i.display_string_8x16))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = display_string_8x16 &rArr; SPI_FLASH_BufferRead &rArr; SPI_FLASH_SendByte &rArr; SPI_TIMEOUT_UserCallback &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_BufferRead
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wrdataR
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wrdataL
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wrcomR
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wrcomL
</UL>
<BR>[Called By]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page27
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page24
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page23
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page21
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page20
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page19
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page16
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page14
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page13
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page12
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page7
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page5
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page4
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page36
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page35
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page32
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page31
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page30
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page29
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page28
</UL>

<P><STRONG><a name="[b5]"></a>dispsameone</STRONG> (Thumb, 132 bytes, Stack size 16 bytes, bsp_hj12864d.o(i.dispsameone))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = dispsameone &rArr; wrdataR &rArr; Busy &rArr; GPIO_Configuration_in &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wrdataR
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wrdataL
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wrcomR
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wrcomL
</UL>
<BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page1
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WindowClear
</UL>

<P><STRONG><a name="[105]"></a>ee_CheckOk</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, bsp_i2c_ee.o(i.ee_CheckOk))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = ee_CheckOk &rArr; i2c_CheckDevice &rArr; i2c_CfgGpio &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_Stop
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_CheckDevice
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[7a]"></a>ee_ReadBytes</STRONG> (Thumb, 126 bytes, Stack size 24 bytes, bsp_i2c_ee.o(i.ee_ReadBytes))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = ee_ReadBytes &rArr; i2c_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_WaitAck
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_Stop
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_Start
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_SendByte
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_ReadByte
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_NAck
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_Ack
</UL>
<BR>[Called By]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RecoverData_Read
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OFFLineSettingData_Read
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FactoryData_Read_Save
</UL>

<P><STRONG><a name="[79]"></a>ee_ReadOneBytes</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, bsp_i2c_ee.o(i.ee_ReadOneBytes))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ee_ReadOneBytes &rArr; i2c_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_WaitAck
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_Stop
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_Start
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_SendByte
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_ReadByte
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_NAck
</UL>
<BR>[Called By]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RecoverData_Read
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OFFLineSettingData_Read
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LocalDataReadOut
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FactoryData_Read_Save
</UL>

<P><STRONG><a name="[7c]"></a>ee_WriteBytes</STRONG> (Thumb, 142 bytes, Stack size 32 bytes, bsp_i2c_ee.o(i.ee_WriteBytes))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = ee_WriteBytes &rArr; i2c_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_WaitAck
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_Stop
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_Start
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_SendByte
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FactoryData_Read_Save
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RecoverData_Write
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OFFLineSettingData_Save
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FactorySettingData_Save
</UL>

<P><STRONG><a name="[7b]"></a>ee_WriteOneBytes</STRONG> (Thumb, 110 bytes, Stack size 16 bytes, bsp_i2c_ee.o(i.ee_WriteOneBytes))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ee_WriteOneBytes &rArr; i2c_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_WaitAck
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_Stop
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_Start
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_SendByte
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FactoryData_Read_Save
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RecoverData_Write
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OFFLineSettingData_Save
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LocalDataSave
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FactorySettingData_Save
</UL>

<P><STRONG><a name="[49]"></a>fputc</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, bsp_usart_dma.o(i.fputc))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = fputc
</UL>
<BR>[Calls]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_SendData
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetFlagStatus
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printf1.o(i.__0printf$1)
</UL>
<P><STRONG><a name="[10c]"></a>i2c_Ack</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, bsp_i2c_gpio.o(i.i2c_Ack))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = i2c_Ack
</UL>
<BR>[Calls]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ee_ReadBytes
</UL>

<P><STRONG><a name="[106]"></a>i2c_CheckDevice</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, bsp_i2c_gpio.o(i.i2c_CheckDevice))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = i2c_CheckDevice &rArr; i2c_CfgGpio &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_CfgGpio
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_WaitAck
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_Stop
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_Start
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_SendByte
</UL>
<BR>[Called By]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ee_CheckOk
</UL>

<P><STRONG><a name="[10d]"></a>i2c_NAck</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, bsp_i2c_gpio.o(i.i2c_NAck))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = i2c_NAck
</UL>
<BR>[Calls]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ee_ReadOneBytes
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ee_ReadBytes
</UL>

<P><STRONG><a name="[10b]"></a>i2c_ReadByte</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, bsp_i2c_gpio.o(i.i2c_ReadByte))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = i2c_ReadByte
</UL>
<BR>[Calls]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ee_ReadOneBytes
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ee_ReadBytes
</UL>

<P><STRONG><a name="[109]"></a>i2c_SendByte</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, bsp_i2c_gpio.o(i.i2c_SendByte))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = i2c_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_CheckDevice
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ee_WriteOneBytes
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ee_WriteBytes
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ee_ReadOneBytes
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ee_ReadBytes
</UL>

<P><STRONG><a name="[108]"></a>i2c_Start</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, bsp_i2c_gpio.o(i.i2c_Start))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = i2c_Start
</UL>
<BR>[Calls]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_CheckDevice
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ee_WriteOneBytes
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ee_WriteBytes
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ee_ReadOneBytes
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ee_ReadBytes
</UL>

<P><STRONG><a name="[107]"></a>i2c_Stop</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, bsp_i2c_gpio.o(i.i2c_Stop))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = i2c_Stop
</UL>
<BR>[Calls]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_CfgGpio
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_CheckDevice
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ee_WriteOneBytes
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ee_WriteBytes
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ee_ReadOneBytes
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ee_ReadBytes
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ee_CheckOk
</UL>

<P><STRONG><a name="[10a]"></a>i2c_WaitAck</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, bsp_i2c_gpio.o(i.i2c_WaitAck))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = i2c_WaitAck
</UL>
<BR>[Calls]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_CheckDevice
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ee_WriteOneBytes
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ee_WriteBytes
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ee_ReadOneBytes
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ee_ReadBytes
</UL>

<P><STRONG><a name="[85]"></a>lcdint</STRONG> (Thumb, 102 bytes, Stack size 8 bytes, bsp_hj12864d.o(i.lcdint))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = lcdint &rArr; wrcomR &rArr; Busy &rArr; GPIO_Configuration_in &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wrcomR
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wrcomL
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
</UL>
<BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HJ12864D_Init
</UL>

<P><STRONG><a name="[46]"></a>main</STRONG> (Thumb, 98 bytes, Stack size 0 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = main &rArr; UIDisplay &rArr; Page4 &rArr; ErrorListShow &rArr; DisplayString &rArr; display_graphic_12x12 &rArr; wrdataR &rArr; Busy &rArr; GPIO_Configuration_in &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ee_CheckOk
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USARTx_DMA_Init
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UIDisplay
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendSetUpData
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SavingDataReadOout
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_Init
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD3078Init
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTCDataGet
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_IO_Init
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LEDCtrl
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_IO_Init
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyCtrl
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_Init
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_Feed
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HeartBeat
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HJ12864D_Init
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataREV
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BL_PWM_Init
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BL_CTRL
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BASIC_TIM_Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[64]"></a>wrcomL</STRONG> (Thumb, 92 bytes, Stack size 8 bytes, bsp_hj12864d.o(i.wrcomL))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = wrcomL &rArr; Busy &rArr; GPIO_Configuration_in &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PORT_Assignment
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Configuration
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Busy
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay
</UL>
<BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_One_8x16
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_Graphic_XXX
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayString
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreatTopicWindow
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdint
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dispsameone
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_string_8x16
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_string_5x8
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_graphic_16x16
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_graphic_12x12
</UL>

<P><STRONG><a name="[66]"></a>wrcomR</STRONG> (Thumb, 92 bytes, Stack size 8 bytes, bsp_hj12864d.o(i.wrcomR))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = wrcomR &rArr; Busy &rArr; GPIO_Configuration_in &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PORT_Assignment
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Configuration
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Busy
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay
</UL>
<BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_One_8x16
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_Graphic_XXX
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayString
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreatTopicWindow
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdint
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dispsameone
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_string_8x16
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_string_5x8
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_graphic_16x16
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_graphic_12x12
</UL>

<P><STRONG><a name="[65]"></a>wrdataL</STRONG> (Thumb, 92 bytes, Stack size 8 bytes, bsp_hj12864d.o(i.wrdataL))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = wrdataL &rArr; Busy &rArr; GPIO_Configuration_in &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PORT_Assignment
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Configuration
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Busy
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay
</UL>
<BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_One_8x16
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_Graphic_XXX
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayString
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreatTopicWindow
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dispsameone
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_string_8x16
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_string_5x8
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_graphic_16x16
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_graphic_12x12
</UL>

<P><STRONG><a name="[67]"></a>wrdataR</STRONG> (Thumb, 92 bytes, Stack size 8 bytes, bsp_hj12864d.o(i.wrdataR))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = wrdataR &rArr; Busy &rArr; GPIO_Configuration_in &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PORT_Assignment
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Configuration
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Busy
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay
</UL>
<BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_One_8x16
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_Graphic_XXX
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayString
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreatTopicWindow
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dispsameone
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_string_8x16
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_string_5x8
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_graphic_16x16
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_graphic_12x12
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[ed]"></a>SetSysClock</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, system_stm32f10x.o(i.SetSysClock))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = SetSysClock &rArr; SetSysClockTo72
</UL>
<BR>[Calls]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClockTo72
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[ee]"></a>SetSysClockTo72</STRONG> (Thumb, 214 bytes, Stack size 12 bytes, system_stm32f10x.o(i.SetSysClockTo72))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = SetSysClockTo72
</UL>
<BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClock
</UL>

<P><STRONG><a name="[111]"></a>i2c_CfgGpio</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, bsp_i2c_gpio.o(i.i2c_CfgGpio))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = i2c_CfgGpio &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_Stop
</UL>
<BR>[Called By]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_CheckDevice
</UL>

<P><STRONG><a name="[110]"></a>i2c_Delay</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, bsp_i2c_gpio.o(i.i2c_Delay))
<BR><BR>[Called By]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_WaitAck
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_Stop
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_Start
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_SendByte
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_ReadByte
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_NAck
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_Ack
</UL>

<P><STRONG><a name="[e6]"></a>SPI_TIMEOUT_UserCallback</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, bsp_spi_flash.o(i.SPI_TIMEOUT_UserCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SPI_TIMEOUT_UserCallback &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_SendByte
</UL>

<P><STRONG><a name="[dd]"></a>RS422_IO_Init</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, bsp_usart_dma.o(i.RS422_IO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = RS422_IO_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USARTx_DMA_Init
</UL>

<P><STRONG><a name="[f7]"></a>USART_Config</STRONG> (Thumb, 170 bytes, Stack size 32 bytes, bsp_usart_dma.o(i.USART_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = USART_Config &rArr; USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_PriorityGroupConfig
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ITConfig
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USARTx_DMA_Init
</UL>

<P><STRONG><a name="[fc]"></a>USARTx_DMA_Config</STRONG> (Thumb, 210 bytes, Stack size 56 bytes, bsp_usart_dma.o(i.USARTx_DMA_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = USARTx_DMA_Config &rArr; NVIC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_PriorityGroupConfig
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Init
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ITConfig
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_DeInit
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Cmd
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClockCmd
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_DMACmd
</UL>
<BR>[Called By]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USARTx_DMA_Init
</UL>

<P><STRONG><a name="[4f]"></a>BASIC_TIM_Mode_Config</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, bsp_timbase.o(i.BASIC_TIM_Mode_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = BASIC_TIM_Mode_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TimeBaseInit
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ITConfig
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Cmd
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ClearFlag
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BASIC_TIM_Init
</UL>

<P><STRONG><a name="[4e]"></a>BASIC_TIM_NVIC_Config</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, bsp_timbase.o(i.BASIC_TIM_NVIC_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = BASIC_TIM_NVIC_Config &rArr; NVIC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_PriorityGroupConfig
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BASIC_TIM_Init
</UL>

<P><STRONG><a name="[58]"></a>GENERAL_TIM_GPIO_Config</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, bsp_generaltim_pwm.o(i.GENERAL_TIM_GPIO_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = GENERAL_TIM_GPIO_Config &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BL_PWM_Init
</UL>

<P><STRONG><a name="[59]"></a>GENERAL_TIM_Mode_Config</STRONG> (Thumb, 96 bytes, Stack size 32 bytes, bsp_generaltim_pwm.o(i.GENERAL_TIM_Mode_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = GENERAL_TIM_Mode_Config &rArr; TIM_OC4Init
</UL>
<BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TimeBaseInit
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC4PreloadConfig
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC4Init
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BL_PWM_Init
</UL>

<P><STRONG><a name="[83]"></a>GPIO_Configuration</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, bsp_sd3078.o(i.GPIO_Configuration))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = GPIO_Configuration &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Init
</UL>

<P><STRONG><a name="[88]"></a>I2CAck</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, bsp_sd3078.o(i.I2CAck))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = I2CAck
</UL>
<BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2Cdelay
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CWriteSerial
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CReadSerial
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_ReadDate
</UL>

<P><STRONG><a name="[8a]"></a>I2CNoAck</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, bsp_sd3078.o(i.I2CNoAck))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = I2CNoAck
</UL>
<BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2Cdelay
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CReadSerial
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_ReadDate
</UL>

<P><STRONG><a name="[90]"></a>I2CReceiveByte</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, bsp_sd3078.o(i.I2CReceiveByte))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = I2CReceiveByte
</UL>
<BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2Cdelay
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CReadSerial
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_ReadDate
</UL>

<P><STRONG><a name="[8d]"></a>I2CSendByte</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, bsp_sd3078.o(i.I2CSendByte))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = I2CSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2Cdelay
</UL>
<BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteRTC_Enable
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteRTC_Disable
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CWriteSerial
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CReadSerial
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_WriteDate
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_ReadDate
</UL>

<P><STRONG><a name="[8c]"></a>I2CStart</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, bsp_sd3078.o(i.I2CStart))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = I2CStart
</UL>
<BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2Cdelay
</UL>
<BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteRTC_Enable
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteRTC_Disable
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CWriteSerial
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CReadSerial
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_WriteDate
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_ReadDate
</UL>

<P><STRONG><a name="[8f]"></a>I2CStop</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, bsp_sd3078.o(i.I2CStop))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = I2CStop
</UL>
<BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2Cdelay
</UL>
<BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteRTC_Enable
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteRTC_Disable
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CWriteSerial
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CReadSerial
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_WriteDate
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_ReadDate
</UL>

<P><STRONG><a name="[8e]"></a>I2CWaitAck</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, bsp_sd3078.o(i.I2CWaitAck))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = I2CWaitAck
</UL>
<BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2Cdelay
</UL>
<BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteRTC_Enable
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteRTC_Disable
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CWriteSerial
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CReadSerial
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_WriteDate
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_ReadDate
</UL>

<P><STRONG><a name="[89]"></a>I2Cdelay</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, bsp_sd3078.o(i.I2Cdelay))
<BR><BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CWaitAck
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CStop
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CStart
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CSendByte
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CReceiveByte
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CNoAck
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CAck
</UL>

<P><STRONG><a name="[103]"></a>_printf_core</STRONG> (Thumb, 336 bytes, Stack size 88 bytes, printf1.o(i._printf_core), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0printf$1
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
